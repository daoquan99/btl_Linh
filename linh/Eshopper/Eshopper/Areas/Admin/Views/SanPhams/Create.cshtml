@model Eshopper.Models.EF.SanPham

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_MainLayoutAdmin.cshtml";
}

<link href="~/Areas/AssetAdmin/css/indexadmin.css" rel="stylesheet" type="text/css">

<link href="~/Areas/AssetAdmin/css/crudadmin.css" rel="stylesheet" type="text/css">

<div id="titleadmin">THÊM MỚI SẢN PHẨM</div>

<form action="@Url.Action("Create")" method="post" enctype="multipart/form-data" class="mt-3">

    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="customers">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MaSP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaSP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaSP, "Mã sản phẩm không được để trống", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenSP, "Tên sản phẩm không được để trống", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SoLuong, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SoLuong, "Số lượng sản phẩm không được để trống", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DonGia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DonGia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DonGia, "Đơn giá không được để trống", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GiaKM, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GiaKM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GiaKM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.URLAnh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.URLAnh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.URLAnh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.URLAnh, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                <div id="LoadImages">
                    <input class="picture" type="file" name="picture" onchange="loadFile(event)" />
                </div>
                <div id="images-group">

                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaLoaiSP, "MaLoaiSP", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MaLoaiSP", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaLoaiSP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaKM, "MaKM", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MaKM", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaKM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-default" />
            </div>
        </div>
        <div>
            @Html.ActionLink("Quay lại", "Index")
            @*<button href="@Html.ActionLink("Quay lại", "Index")"></button>*@
            @*<button class="button button2" href="@Html.ActionLink("Quay lại", "Index")"></button>*@
        </div>
    </div>
</form>


    @section scripts{

        <script>
            function loadFile(event) {
                var files = event.target.files;
                var acceptFileTypes = /^image\/(gif|jpe?g|png)$/i;
                if (files[0]["type"].length && !acceptFileTypes.test(files[0]["type"])) {
                    alert("Chỉ chấp nhận định dạng jpeg, jpg, png, gif");
                    $("#LoadImages .picture").remove();
                    $("#LoadImages").append('<input type="file" class="picture" name="picture" onchange="loadFile(event)" />')
                    return false;
                }
                if (files[0]["size"] > 4000000) {
                    alert("Dung lượng ảnh lớn hơn 4MB");
                    $("#LoadImages .picture").remove();
                    $("#LoadImages").append('<input type="file" class="picture" name="picture" onchange="loadFile(event)" />')
                    return false;
                }
                $("#images-group").html('<div class="multiple-images-wrapper col-md-2"><img src="' + URL.createObjectURL(event.target.files[0]) + '" class="img-thumbnail" /><a href="javascript:;" id="img-0" class="btn btn-outline-dark" onclick="deleteImage(0)"><span>x</span></a></div>');
            }
            function deleteImage(divid) {
                if (confirm('Bạn có chắc xóa ảnh này?')) {
                    $('#img-' + divid).parent().fadeOut().remove();
                    $("#LoadImages .picture").remove();
                    $("#LoadImages").append('<input type="file" class="picture" name="picture" onchange="loadFile(event)" />')
                }
            }
        </script>
    }
